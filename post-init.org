#+title: Emacs Early Init
#+author: mattiasdrp
#+date: <2022-08-17 Wed>
#+language: en_US
#+property: header-args :results silent :exports code :tangle yes

#+AUTO_TANGLE: t
#+keywords: Emacs

Literate configuration for [[file:post-custom.el][post-init.el]].

* Table of Contents
:PROPERTIES:
:TOC:      :include all :ignore this
:END:

:CONTENTS:
- [[#header][Header]]
- [[#mail-gpg-et-al][Mail, gpg et al]]
  - [[#mu4e][Mu4e]]
- [[#keybindings][Keybindings]]
  - [[#unbinding][Unbinding]]
    - [[#globally][Globally]]
    - [[#locally-to-a-keymap][Locally to a keymap]]
  - [[#binding][Binding]]
    - [[#globally][Globally]]
    - [[#locally][Locally]]
- [[#end][End]]
:END:

* Header
:PROPERTIES:
:CUSTOM_ID: header
:END:

#+begin_src emacs-lisp
  ;;; post-init.el --- Emacs customization -*- lexical-binding: t -*-

  ;; Copyright (c) 2022 mattiasdrp and contributors.

  ;; Author: mattiasdrp
  ;; Maintainer: mattiasdrp <https://github.com/mattiasdrp>
  ;; Created: 17 august 2022
  ;; Version: 1.0
  ;; Licence: MIT
  ;; Keywords: emacs, init, convenience, configuration
  ;; URL: https://github.com/mattiasdrp/pokemacs

    ;;; Commentary:
  ;; This file will be loaded when emacs has finished initializing everything
  ;; and allows to override some bindings and behaviours that are not
  ;; controlled by custom.el

  ;;; Code:

#+end_src

* Mail, gpg et al
:PROPERTIES:
:CUSTOM_ID: mail-gpg-et-al
:END:

*** Mu4e
:PROPERTIES:
:CUSTOM_ID: mu4e
:END:

Based on this [[https://macowners.club/posts/email-emacs-mu4e-macos/#setup-msmtp-for-sending][tutorial]].
For WSL see [[https://www.39digits.com/signed-git-commits-on-wsl2-using-visual-studio-code][this]]

- Create directories for your mails
    #+BEGIN_SRC shell :tangle no
      .maildir
      ├── acc1
      ├── acc2
      └── acc3
    #+END_SRC

- Install [[https://www.djcbsoftware.nl/code/mu/mu4e/Installation.html][mu4e]] from the latest release.

- Fill a ~.mbsyncrc~ with the following fields (for each account):
    #+BEGIN_SRC shell :tangle no
      IMAPAccount acc
      Host imap.mail.me.com
      User imap-user
      PassCmd "gpg2 -q --for-your-eyes-only --no-tty -d ~/mu4e/.mbsyncpass-acc.gpg"
      Port 993
      SSLType IMAPS
      SSLVersions TLSv1.2
      AuthMechs PLAIN
      SystemCertificates no
      CertificateFile /etc/ssl/certs/ca-certificates.crt

      IMAPStore acc-remote
      Account acc

      MaildirStore acc-local
      SubFolders Verbatim
      Path ~/.maildir/acc/
      Inbox ~/.maildir/acc/INBOX

      Channel acc
      Far :acc-remote:
      Near :acc-local:
      Patterns *
      Create Near
      Sync All
      Expunge Both
      SyncState *
    #+END_SRC

- To create ~.mbsyncpass-acc.gpg~ store your password in ~.mbsyncpass-acc~ and encrypt with ~gpg2 -c .mbsyncpass-acc~ before removing the original file.

- Synchronise all your mails with ~mbsync -aV~

- Initialise ~mu4e~ with
    #+BEGIN_SRC shell :tangle no
      mu init -m ~/.maildir \
         --my-address dummy@icloud.com \
         --my-address dummy@gmail.com \
         --my-address dummy@example.com
    #+END_SRC

- Create the index with ~mu index~

- Fill a ~.msmtprc~ with the following fields (for each account):
    #+BEGIN_SRC shell :tangle no
      # Set default values for all the accounts.
      defaults
      logfile ~/.maildir/msmtp.log
      tls_trust_file /etc/ssl/certs/ca-certificates.crt

      # ======================================================================

      account acc
      auth on
      host smtp.mail.me.com
      port 465
      protocol smtp
      from smtp-login@acc.com
      user smtp-login
      passwordeval "gpg2 -q --for-your-eyes-only --no-tty -d ~/mu4e/.mbsyncpass-acc.gpg"
      tls on
      tls_starttls off
#+END_SRC

#+BEGIN_SRC emacs-lisp
  (when use-mu4e
    (use-package smtpmail
      :ensure nil
      :ensure-system-package msmtp))

  ;; (load-file (expand-file-name "~/mu4e/mu4e.el"))
#+END_SRC

* Keybindings
:PROPERTIES:
:CUSTOM_ID: keybindings
:END:

** Unbinding
:PROPERTIES:
:CUSTOM_ID: unbinding
:END:

You can unbind anything you want.

*** Globally
:PROPERTIES:
:CUSTOM_ID: globally
:END:

#+begin_src emacs-lisp
  ;; (general-unbind
  ;;   "C-o"
  ;;   )
#+end_src

*** Locally to a keymap
:PROPERTIES:
:CUSTOM_ID: locally-to-a-keymap
:END:

(notice the quote before the name of the map)

#+begin_src emacs-lisp
  ;; (general-unbind
  ;;   :keymaps 'tuareg-mode-map
  ;;   "C-c TAB"
  ;;   )
#+end_src

** Binding
:PROPERTIES:
:CUSTOM_ID: binding
:END:

You can bind anything you want.

*** Globally
:PROPERTIES:
:CUSTOM_ID: globally
:END:

#+begin_src emacs-lisp
  ;; (general-define-key
  ;;  "C-x 1"                 'delete-other-windows
  ;;  )
#+end_src

Grouped under a prefix, allowing to define multiple keybindings under the same prefix without having to rewrite the prefix.

#+begin_src emacs-lisp
  ;; (general-define-key
  ;;  :prefix "M-z"
  ;;  "w"                       'mdrp/resize-window-width
  ;;  "h"                       'mdrp/resize-window-height)
#+end_src

*** Locally
:PROPERTIES:
:CUSTOM_ID: locally
:END:

(notice the quote before the name of the map)

#+begin_src emacs-lisp
  ;; (general-define-key
  ;;  :keymaps 'tuareg-mode-map
  ;;  "C-x M-1"                 'delete-other-windows
  ;;  )
#+end_src

You can obviously combine ~:keymaps~ and ~:prefix~

* End
:PROPERTIES:
:CUSTOM_ID: end
:END:

#+begin_src emacs-lisp
  (provide 'post-init)
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ;;; post-init.el ends here
#+end_src
